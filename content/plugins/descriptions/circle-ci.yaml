# The server must be restarted to pick up changes in this file.

# Required. Must be unique across all files in the directory. No whitespace. Use hyphens as
# separators.
name: circle-ci
# Required. Can have whitespace. Should be titleized.
humanName: Circle CI
heading: 'Backstage Circle CI Plugin'
# Keep it short
lead: 'See Circle CI Builds in Backstage'

seo:
  # Don't forget to end with "| Roadie"
  title: 'Backstage Circle CI Plugin | Roadie'
  description: |
    The Backstage Circle CI plugin integrates with Circle CI to show your build
    information inside Backstage where it can be associated with your services.

logo:
  # This must be a relative path. It should start without a slash or with ./
  # The overall size of the file should be approximately 200 by 200.
  # The image in the file should be approximately 100 by 100 pixels. It needs space around it.
  # The image will be made greyscale by Gatsby Image Sharp.
  fileSystemPath: './content/assets/logos/circle-ci/circle-logo-stacked-white-28.png'
  # The dimensions are required. They are the outer dimensions of the image file.
  width: 583
  height: 572

coverImage:
  # This must be a relative path. It should start without a slash or with ./
  fileSystemPath: './content/assets/circle-ci-plugin.png'
  alt: 'A list of builds in a table along with a status and retry button for each build.'

# Instructions for someone who wants to use this plugin.
# languages used here must be listed in the .babelrc
gettingStarted:
    # What will this step accomplish?
  - intro: Install the plugin
    language: bash
    code: yarn add @backstage/plugin-circleci
  - intro: Import it into your Backstage application
    language: typescript
    code: |
      // packages/app/src/plugins.ts
      export { plugin as Circleci } from '@backstage/plugin-circleci';
  - intro: 'Add the plugin API to your API builder'
    language: typescript
    code: |
      // packages/app/src/apis.ts
      import { CircleCIApi, circleCIApiRef } from '@backstage/plugin-circleci';

      export const apis = (config: ConfigApi) => {
        builder.add(circleCIApiRef, new CircleCIApi(/* optional custom url for your own CircleCI instance */));
      };

# Optional. Use this to suit the brand of the tool that the plugin integrates with.
style:
  # These colors will fall back to a default if omitted.
  primaryColor: '#161616'
  contrastingColor: '#fff'
