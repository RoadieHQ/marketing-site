# The server must be restarted to pick up changes in ths file.

# Required. Must be unique across all files in the directory. No whitespace. Use hyphens as
# separators.
name: aws-lambda
humanName: AWS Lambda
heading: 'Backstage AWS Lambda Plugin'
# Keep it short
lead: 'See AWS Lambda functions for your components in Backstage'

seo:
  # Don't forget to end with "| Roadie"
  title: 'Backstage AWS Lambda Plugin | Roadie'
  description: |
    See AWS Lambda functions for your components in Backstage.

logo:
  # This must be a relative path. It should start without a slash or with ./
  # The overall size of the file should be approximately 200 by 200.
  # The image in the file should be approximately 100 by 100 pixels. It needs space around it.
  # The image will be made greyscale by Gatsby Image Sharp.
  fileSystemPath: './content/assets/logos/aws-lambda/logo.png'
  # The dimensions are required. They are the outer dimensions of the image file.
  width: 128
  height: 128

coverImage:
  fileSystemPath: './content/assets/lambda-widget.png'
  alt: 'A screenshot of the AWS Lambda. It is showing a AWS Lambda function details for a sample component.'

# Instructions for someone who wants to use this plugin.
# languages used here must be listed in the .babelrc
gettingStarted:
  # What will this step accomplish?
  - intro: Install the plugin into Backstage.
    language: bash
    code: 'yarn add @roadiehq/backstage-plugin-aws-lambda'
  - intro: Add plugin to the list of plugins.
    language: typescript
    code: |
      // packages/app/src/plugins.ts
      export { plugin as AWSLambdaWidget } from '@roadiehq/backstage-plugin-aws-lambda';
  - intro: Add Widget API to your Backstage instance.
    language: typescript
    code: |
      // packages/app/src/components/catalog/EntityPage.tsx
      import {
        AWSLambdaOverviewWidget,
        isPluginApplicableToEntity as isLambdaWidgetAvailable,
      } from '@roadiehq/backstage-plugin-aws-lambda';

        const OverviewContent = ({ entity }: { entity: Entity }) => (
          &lt;Grid container spacing={3}>
            ...
            {isLambdaWidgetAvailable(entity) && (
              &lt;Grid item md={6}>
                &lt;AWSLambdaOverviewWidget entity={entity} />
              &lt;/Grid>
            )}
          &lt;/Grid>
        );

# Optional. Use this to suit the brand of the tool that the plugin integrates with.
style:
  # These colors will fall back to a default if omitted.
  primaryColor: 'rgb(36, 41, 46)'
  contrastingColor: '#fff'
