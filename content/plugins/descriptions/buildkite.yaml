# The server must be restarted to pick up changes in this file.

# Required. Must be unique across all files in the directory. No whitespace. Use hyphens as
# separators.
name: buildkite
# Required. Can have whitespace. Should be titleized.
humanName: BuildKite
heading: 'Backstage BuildKite Plugin'
# Keep it short
lead: 'See BuildKite Builds in Backstage'

seo:
  # Don't forget to end with "| Roadie"
  title: 'Backstage BuildKite Plugin | Roadie'
  description: |
    The Backstage BuildKite plugin integrates with BuildKite to show your builds
    information inside Backstage where it can be associated with your services.

logo:
  # This must be a relative path. It should start without a slash or with ./
  # The overall size of the file should be approximately 200 by 200.
  # The image in the file should be approximately 100 by 100 pixels. It needs space around it.
  # The image will be made greyscale by Gatsby Image Sharp.
  fileSystemPath: './content/assets/logos/buildkite/buildkite-logo.png'
  # The dimensions are required. They are the outer dimensions of the image file.
  width: 200
  height: 200

coverImage:
  # This must be a relative path. It should start without a slash or with ./
  fileSystemPath: './content/assets/buildkite-plugin-overview.png'
  alt: 'A list of builds in a table along with a status and retry button for each build.'

# Instructions for someone who wants to use this plugin.
# languages used here must be listed in the .babelrc
gettingStarted:
    # What will this step accomplish?
  - intro: Install the plugin
    language: bash
    code: yarn add @roadiehq/backstage-plugin-buildkite

  - intro: Import it into your Backstage application
    language: typescript
    code: |
      // packages/app/src/plugins.ts
      export { plugin as BuildKite } from '@roadiehq/backstage-plugin-buildkite';
  
  - intro: Add proxy configuration'
    language: 'yaml'
    code: |
      // app-config.yaml
      proxy:

      ...

      '/buildkite/api':
        target: https://api.buildkite.com/v2/
        headers:
          Authorization: 
            $env: BUILDKITE_TOKEN

  - intro: Add plugin API to your Backstage instance.
    language: typescript
    code: | 
      // packages/app/src/components/catalog/EntityPage.tsx
      import {
        Router as BuildKiteRouter,
        isPluginApplicableToEntity as isBuildKiteAvailable,
      } from '@roadiehq/backstage-plugin-buildkite';

      const CICDSwitcher = ({ entity }: { entity: Entity }) => {
        switch (true) {
          ...
          case isBuildKiteAvailable(entity):
            return <BuildKiteRouter entity={entity} />;
          ...
        }
      }

  - intro: Add annotation to your component-info.yaml file.
    language: YAML
    code: | 
        metadata:
          annotations:
            buildkite.com/project-slug: [exampleorganization/exampleproject]
            
# Optional. Use this to suit the brand of the tool that the plugin integrates with.
style:
  # These colors will fall back to a default if omitted.
  primaryColor: 'rgb(0, 70, 67)'
  contrastingColor: '#fff'
