# The server must be restarted to pick up changes in ths file.

# Required. Must be unique across all files in the directory. No whitespace. Use hyphens as
# separators.
name: sonarqube
humanName: SonarQube
heading: 'Backstage SonarQube and SonarCloud Plugin'
# Keep it short
lead: 'Components to display code quality metrics from SonarCloud and SonarQube.'

seo:
  # Don't forget to end with "| Roadie"
  title: 'Backstage SonarQube and SonarCloud Plugin | Roadie'
  description: |
    Components to display code quality metrics from SonarCloud and SonarQube.

logo:
  # This must be a relative path. It should start without a slash or with ./
  # The overall size of the file should be approximately 200 by 200.
  # The image in the file should be approximately 100 by 100 pixels. It needs space around it.
  # The image will be made greyscale by Gatsby Image Sharp.
  fileSystemPath: './content/assets/logos/sonarqube/logo.png'
  # The dimensions are required. They are the outer dimensions of the image file.
  width: 200
  height: 200

coverImage:
  fileSystemPath: './content/assets/sonar-plugin.png'
  alt: 'A screenshot of the SonarQube and SonarCloud plugin.'

# Instructions for someone who wants to use this plugin.
# languages used here must be listed in the .babelrc
gettingStarted:
  # What will this step accomplish?
  - intro: Install the plugin into Backstage.
    language: bash
    code: 'yarn add @backstage/plugin-sonarqube'
  - intro: Add plugin to the list of plugins.
    language: typescript
    code: |
      // packages/app/src/plugins.ts
      export { plugin as SonarQube } from '@backstage/plugin-sonarqube';
  - intro: Add Widget API to your Backstage instance.
    language: typescript
    code: |
      // packages/app/src/components/catalog/EntityPage.tsx
      import { SonarQubeCard } from '@backstage/plugin-sonarqube';

        const OverviewContent = ({ entity }: { entity: Entity }) => (
          &lt;Grid container spacing={3} alignItems="stretch">
            ...
            &lt;Grid item md={6}>
              &lt;SonarQubeCard  entity={entity} />
            &lt;/Grid>
            ...
          &lt;/Grid>
        );
  - intro: Add the proxy config for SonarCloud
    language: YAML
    code: | 
      // app-config.yaml
      proxy:
        '/sonarqube':
          target: https://sonarcloud.io/api
          allowedMethods: ['GET']
          headers:
            Authorization:
              # Content: 'Basic base64("<api-key>:")' <-- note the trailing ':'
              # Example: Basic bXktYXBpLWtleTo=
              $env: SONARQUBE_AUTH_HEADER
  - intro: Add the proxy config for SonarQube
    language: YAML
    code: | 
      proxy:
        '/sonarqube':
          target: https://your.sonarqube.instance.com/api
          allowedMethods: ['GET']
          headers:
            Authorization:
              # Content: 'Basic base64("<api-key>:")' <-- note the trailing ':'
              # Example: Basic bXktYXBpLWtleTo=
              $env: SONARQUBE_AUTH_HEADER

      sonarQube:
        baseUrl: https://your.sonarqube.instance.com
  - intro: Add annotation to your component-info.yaml file.
    language: YAML
    code: | 
        metadata:
          annotations:
            sonarqube.org/project-key: [YOUR_PROJECT_KEY]

# Optional. Use this to suit the brand of the tool that the plugin integrates with.
style:
  # These colors will fall back to a default if omitted.
  primaryColor: 'rgb(76, 155, 214)'
  contrastingColor: '#fff'
